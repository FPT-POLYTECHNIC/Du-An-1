/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package poly.app.ui.frames.quanly;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.stream.Collectors;
import javax.swing.ButtonGroup;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import poly.app.core.daoimpl.DoAnDaoImpl;
import poly.app.core.entities.DoAn;
import poly.app.core.entities.DoAnChiTiet;
import poly.app.core.helper.DialogHelper;
import poly.app.ui.dialogs.capnhat.DialogCapNhatDoAn;
import poly.app.ui.dialogs.them.DialogThemDoAn;
import poly.app.ui.dialogs.capnhat.DialogCapNhatDoAnChiTiet;
import poly.app.ui.dialogs.them.DialogThemDoAnChiTiet;
import poly.app.ui.utils.TableRendererUtil;

/**
 *
 * @author vothanhtai
 */
public class FrameQLDoAn extends javax.swing.JFrame {

    List<DoAn> listDoAn = new ArrayList<>();
    List<DoAnChiTiet> listDoAnCT = new ArrayList<>();
    Map<String, DoAn> mapDoAn = new HashMap<String, DoAn>();
    ButtonGroup btngr = new ButtonGroup();
    ButtonGroup btnLDA = new ButtonGroup();

    /**
     * Creates new form FrameQLNhanVien
     */
    public FrameQLDoAn() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Quản lý đồ ăn");
        reRenderUI();
        this.loadDataToTable();
        this.setRadio();
    }

    public void setRadio() {
        btngr.add(rdoDangDuocBan);
        btngr.add(rdoDaNgungBan);
        rdoDangDuocBan.setEnabled(false);
        rdoDaNgungBan.setEnabled(false);

        btnLDA.add(rdoDoAnNhanh);
        btnLDA.add(rdoDoUong);
        rdoDoAnNhanh.setEnabled(false);
        rdoDoUong.setEnabled(false);
    }

    private void reRenderUI() {
        //        Render lại giao diện cho table
        TableRendererUtil tblRenderer = new TableRendererUtil(tblDoAn);
        tblRenderer.setCellEditable(false);
        tblRenderer.changeHeaderStyle();

        tblRenderer = new TableRendererUtil(tblDoAnChiTiet);
        tblRenderer.setCellEditable(false);
        tblRenderer.changeHeaderStyle();
    }
    
    public JPanel getMainPanel() {
        return pnMain;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnMain = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTraCuuDoAn = new javax.swing.JTextField();
        rdoDangDuocBan = new javax.swing.JRadioButton();
        rdoDaNgungBan = new javax.swing.JRadioButton();
        chkTheoTrangThai = new javax.swing.JCheckBox();
        chkTheoTen = new javax.swing.JCheckBox();
        rdoDoUong = new javax.swing.JRadioButton();
        rdoDoAnNhanh = new javax.swing.JRadioButton();
        chkTheoLoaiDoAn = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnThemKichCo = new javax.swing.JButton();
        btnSuaKichCo = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoAn = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDoAnChiTiet = new javax.swing.JTable();
        btnCollapse = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel1.setText("Tra cứu đồ ăn");

        txtTraCuuDoAn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTraCuuDoAnKeyReleased(evt);
            }
        });

        rdoDangDuocBan.setSelected(true);
        rdoDangDuocBan.setText("Đang được bán");
        rdoDangDuocBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDangDuocBanActionPerformed(evt);
            }
        });

        rdoDaNgungBan.setText("Đã ngưng bán");
        rdoDaNgungBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDaNgungBanActionPerformed(evt);
            }
        });

        chkTheoTrangThai.setText("Theo trạng thái");
        chkTheoTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTheoTrangThaiActionPerformed(evt);
            }
        });

        chkTheoTen.setSelected(true);
        chkTheoTen.setText("Theo tên");
        chkTheoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTheoTenActionPerformed(evt);
            }
        });

        rdoDoUong.setText("Đồ uống");
        rdoDoUong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDoUongActionPerformed(evt);
            }
        });

        rdoDoAnNhanh.setSelected(true);
        rdoDoAnNhanh.setText("Đồ ăn nhanh");
        rdoDoAnNhanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDoAnNhanhActionPerformed(evt);
            }
        });

        chkTheoLoaiDoAn.setText("Theo loại đồ ăn");
        chkTheoLoaiDoAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTheoLoaiDoAnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTraCuuDoAn)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(chkTheoTen)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rdoDaNgungBan)
                                    .addComponent(rdoDangDuocBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chkTheoTrangThai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdoDoUong)
                                    .addComponent(rdoDoAnNhanh))))
                        .addGap(0, 9, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkTheoLoaiDoAn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(chkTheoTen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTraCuuDoAn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(chkTheoTrangThai)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoDangDuocBan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoDaNgungBan, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chkTheoLoaiDoAn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoDoAnNhanh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoDoUong, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setOpaque(false);

        btnThem.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnThemKichCo.setText("Thêm kích cỡ");
        btnThemKichCo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKichCoActionPerformed(evt);
            }
        });

        btnSuaKichCo.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        btnSuaKichCo.setText("Sửa");
        btnSuaKichCo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaKichCoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnThem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThemKichCo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSuaKichCo)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnThemKichCo)
                    .addComponent(btnSuaKichCo))
                .addContainerGap())
        );

        jPanel5.setOpaque(false);

        tblDoAn.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        tblDoAn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã đồ ăn", "Tên đồ ăn", "Trạng  Thái", "Loại đồ ăn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoAn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoAnMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDoAn);

        tblDoAnChiTiet.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        tblDoAnChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kích cỡ", "Đơn giá", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblDoAnChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoAnChiTietMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDoAnChiTiet);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCollapse.setBackground(new java.awt.Color(51, 51, 51));
        btnCollapse.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnCollapse.setForeground(new java.awt.Color(255, 255, 255));
        btnCollapse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCollapse.setText("<<");
        btnCollapse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCollapse.setOpaque(true);
        btnCollapse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCollapseMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pnMainLayout = new javax.swing.GroupLayout(pnMain);
        pnMain.setLayout(pnMainLayout);
        pnMainLayout.setHorizontalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMainLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCollapse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnMainLayout.setVerticalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnCollapse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCollapseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCollapseMouseReleased
        if (btnCollapse.getText().equals("<<")) {
            jPanel2.setVisible(false);
            btnCollapse.setText(">>");
        } else {
            jPanel2.setVisible(true);
            btnCollapse.setText("<<");
        }
    }//GEN-LAST:event_btnCollapseMouseReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.loadDataToTable();
    }//GEN-LAST:event_formWindowOpened

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        this.insertDA();
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblDoAnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoAnMouseClicked
        if (tblDoAn.getSelectedRow() >= 0) {
            if (evt.getClickCount() >= 2) {
                this.updateDA();
                this.searchDoAnByName();
            } else {
                this.loadDoAnChiTiet();
            }
        }

    }//GEN-LAST:event_tblDoAnMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        this.updateDA();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnSuaKichCoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaKichCoActionPerformed
        this.updateDACT();
    }//GEN-LAST:event_btnSuaKichCoActionPerformed

    private void txtTraCuuDoAnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTraCuuDoAnKeyReleased
        if (txtTraCuuDoAn.getText().equals("")) {
            this.loadDataToTable();
        } else {
//            this.searchDA();
            this.searchDoAnByName();
        }
    }//GEN-LAST:event_txtTraCuuDoAnKeyReleased

    private void btnThemKichCoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKichCoActionPerformed
        this.insertDACT();
    }//GEN-LAST:event_btnThemKichCoActionPerformed

    private void tblDoAnChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoAnChiTietMouseClicked
        if (tblDoAnChiTiet.getSelectedRow() >= 0) {
            if (evt.getClickCount() >= 2) {
                this.updateDACT();
            }
        }
    }//GEN-LAST:event_tblDoAnChiTietMouseClicked

    private void rdoDangDuocBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDangDuocBanActionPerformed

        this.searchDoAnByName();
    }//GEN-LAST:event_rdoDangDuocBanActionPerformed

    private void rdoDaNgungBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDaNgungBanActionPerformed

        this.searchDoAnByName();
    }//GEN-LAST:event_rdoDaNgungBanActionPerformed

    private void chkTheoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTheoTenActionPerformed
        txtTraCuuDoAn.setText("");
        txtTraCuuDoAn.setEditable(chkTheoTen.isSelected());
        this.searchDoAnByName();
    }//GEN-LAST:event_chkTheoTenActionPerformed

    private void rdoDoUongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDoUongActionPerformed

        this.searchDoAnByName();
    }//GEN-LAST:event_rdoDoUongActionPerformed

    private void rdoDoAnNhanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDoAnNhanhActionPerformed

        this.searchDoAnByName();
    }//GEN-LAST:event_rdoDoAnNhanhActionPerformed

    private void chkTheoTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTheoTrangThaiActionPerformed
        rdoDangDuocBan.setEnabled(chkTheoTrangThai.isSelected());
        rdoDaNgungBan.setEnabled(chkTheoTrangThai.isSelected());
        this.searchDoAnByName();
    }//GEN-LAST:event_chkTheoTrangThaiActionPerformed

    private void chkTheoLoaiDoAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTheoLoaiDoAnActionPerformed
        rdoDoAnNhanh.setEnabled(chkTheoLoaiDoAn.isSelected());
        rdoDoUong.setEnabled(chkTheoLoaiDoAn.isSelected());
        this.searchDoAnByName();
    }//GEN-LAST:event_chkTheoLoaiDoAnActionPerformed

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void loadDataToTable() {
        DefaultTableModel modelDA = (DefaultTableModel) tblDoAn.getModel();
        modelDA.setRowCount(0);
        DoAnDaoImpl doAnDao = new DoAnDaoImpl();
        listDoAn = doAnDao.getAll();
        int i = 1;
        for (DoAn fill : listDoAn) {
            Object[] record = new Object[]{
                i++,
                fill.getId(),
                fill.getTen(),
                fill.isDangBan() ? "Đang được bán" : "Đã ngưng bán",
                fill.getLoaiDoAn().getTen()
            };
            modelDA.addRow(record);
            mapDoAn.put(fill.getId(), fill);
        }
    }

    public void loadDoAnChiTiet() {
        int index = tblDoAn.getSelectedRow();
        String id = (String) tblDoAn.getValueAt(index, 1);
        DefaultTableModel modelDACT = (DefaultTableModel) tblDoAnChiTiet.getModel();
        modelDACT.setRowCount(0);

        DoAn doan = (DoAn) mapDoAn.get(id);
        Set<DoAnChiTiet> dact = doan.getDoAnChiTiets();

        List<DoAnChiTiet> dactList = dact.stream()
                .sorted(Comparator.comparing(DoAnChiTiet::getDonGia)) //comparator - how you want to sort it
                .collect(Collectors.toList());

        for (DoAnChiTiet fill : dactList) {
            Object[] record = new Object[]{
                fill.getKichCoDoAn().getTen(),
                fill.getDonGia(),
                fill.isDangBan() ? "Đang được bán" : "Đã ngưng bán"
            };
            modelDACT.addRow(record);
        }
    }

    public void insertDA() {
        new DialogThemDoAn(this, true).setVisible(true);
        this.loadDataToTable();
    }

    public void updateDA() {
        int index = tblDoAn.getSelectedRow();
        if (tblDoAn.getSelectedRow() < 0) {
            DialogHelper.message(this, "Chưa chọn đồ ăn !", DialogHelper.ERROR_MESSAGE);
        }
        String idDA = (String) tblDoAn.getValueAt(index, 1);
        new DialogCapNhatDoAn(this, true, mapDoAn.get(idDA)).setVisible(true);
        DefaultTableModel modelDACT = (DefaultTableModel) tblDoAnChiTiet.getModel();
        modelDACT.setRowCount(0);
        this.loadDataToTable();

    }

    public void searchDA() {
        DefaultTableModel modelDA = (DefaultTableModel) tblDoAn.getModel();
        modelDA.setRowCount(0);
        DoAnDaoImpl search = new DoAnDaoImpl();
        Map<String, Object> mapSearch = new HashMap<String, Object>();
        mapSearch.put("ten", txtTraCuuDoAn.getText());
        List<DoAn> listSearch = search.getByProperties(mapSearch);
        for (DoAn fill : listSearch) {
            Object[] record = new Object[]{
                fill.getId(),
                fill.getTen(),
                fill.isDangBan() ? "Đang được bán" : "Đã ngưng bán",
                fill.getLoaiDoAn().getTen()
            };
            modelDA.addRow(record);
        }
    }

    public void searchDoAnByName() {
        Map<String, DoAn> mapSearchDoAn = new HashMap<>();
        DefaultTableModel modelDA = (DefaultTableModel) tblDoAn.getModel();
        modelDA.setRowCount(0);
        {
            for (Entry<String, DoAn> entry : mapDoAn.entrySet()) {
                if (entry.getValue().getTen().toLowerCase().contains(txtTraCuuDoAn.getText().toLowerCase())) {
                    DoAn doAn = entry.getValue();
                    mapSearchDoAn.put(doAn.getId(), doAn);
                }
            }
        }

        if (rdoDangDuocBan.isSelected() && rdoDangDuocBan.isEnabled()) {
            mapSearchDoAn = this.filterDangDuocBan(mapDoAn);
        }
        if (rdoDaNgungBan.isSelected() && rdoDaNgungBan.isEnabled()) {
            mapSearchDoAn = this.filterDaNgungBan(mapSearchDoAn);
        }
        if (rdoDoAnNhanh.isSelected() && rdoDoAnNhanh.isEnabled()) {
            mapSearchDoAn = this.filterDoAnhNhanh(mapSearchDoAn);
        }
        if (rdoDoUong.isSelected() && rdoDoUong.isEnabled()) {
            mapSearchDoAn = this.filterDoUong(mapSearchDoAn);
        }

        int i = 1;
        for (Entry<String, DoAn> entry : mapSearchDoAn.entrySet()) {
                DoAn doAn = entry.getValue();
                Object[] record = new Object[]{
                    i++,
                    doAn.getId(),
                    doAn.getTen(),
                    doAn.isDangBan() ? "Đang đươc bán" : "Đã ngưng bán",
                    doAn.getLoaiDoAn().getTen()
                };
                modelDA.addRow(record);
        }
    }

    public Map<String, DoAn> filterDangDuocBan(Map<String, DoAn> mapSearch) {
        Map<String, DoAn> filter = new HashMap<>();
        for (Entry<String, DoAn> entry : mapSearch.entrySet()) {
            if (entry.getValue().isDangBan().compareTo(true) == 0) {
                DoAn doAn = entry.getValue();
                filter.put(doAn.getId(), doAn);
            }
        }
        return filter;
    }

    public Map<String, DoAn> filterDaNgungBan(Map<String, DoAn> mapSearch) {
        Map<String, DoAn> filter = new HashMap<>();
        for (Entry<String, DoAn> entry : mapSearch.entrySet()) {
            if (entry.getValue().isDangBan().compareTo(false) == 0) {
                DoAn doAn = entry.getValue();
                filter.put(doAn.getId(), doAn);
            }
        }
        return filter;
    }

    public Map<String, DoAn> filterDoAnhNhanh(Map<String, DoAn> mapSearch) {
        Map<String, DoAn> filter = new HashMap<>();
        for (Entry<String, DoAn> entry : mapSearch.entrySet()) {
            if (entry.getValue().getLoaiDoAn().getId().compareTo("DA") == 0) {
                DoAn doAn = entry.getValue();
                filter.put(doAn.getId(), doAn);
            }
        }
        return filter;
    }

    public Map<String, DoAn> filterDoUong(Map<String, DoAn> mapSearch) {
        Map<String, DoAn> filter = new HashMap<>();
        for (Entry<String, DoAn> entry : mapSearch.entrySet()) {
            if (entry.getValue().getLoaiDoAn().getId().compareTo("NU") == 0) {
                DoAn doAn = entry.getValue();
                filter.put(doAn.getId(), doAn);
            }
        }
        return filter;
    }

    public void insertDACT() {

        if (tblDoAn.getSelectedRow() < 0) {
            DialogHelper.message(this, "Chưa chọn đồ ăn !", DialogHelper.ERROR_MESSAGE);
        } else {
            String idDA = (String) tblDoAn.getValueAt(tblDoAn.getSelectedRow(), 1);
            DoAn doAn = (DoAn) mapDoAn.get(idDA);
            new DialogThemDoAnChiTiet(this, true, doAn).setVisible(true);
            this.loadDoAnChiTiet();
        }

    }

    public void updateDACT() {

        int indexDA = tblDoAn.getSelectedRow();
        String idDA = (String) tblDoAn.getValueAt(indexDA, 1);
        int indexDACT = tblDoAnChiTiet.getSelectedRow();

        DoAn doan = (DoAn) mapDoAn.get(idDA);
        Set<DoAnChiTiet> doanchitiet = doan.getDoAnChiTiets();

        if (indexDACT < 0) {
            DialogHelper.message(this, "Chưa chọn cỡ !", DialogHelper.ERROR_MESSAGE);
        } else {
            String dactTen = (String) tblDoAnChiTiet.getValueAt(indexDACT, 0);
            for (DoAnChiTiet item : doanchitiet) {
                if (item.getKichCoDoAn().getTen().equals(dactTen)) {
                    new DialogCapNhatDoAnChiTiet(this, true, item).setVisible(true);
                    this.loadDoAnChiTiet();
                    break;
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameQLDoAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameQLDoAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameQLDoAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameQLDoAn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameQLDoAn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnCollapse;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSuaKichCo;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemKichCo;
    private javax.swing.JCheckBox chkTheoLoaiDoAn;
    private javax.swing.JCheckBox chkTheoTen;
    private javax.swing.JCheckBox chkTheoTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnMain;
    private javax.swing.JRadioButton rdoDaNgungBan;
    private javax.swing.JRadioButton rdoDangDuocBan;
    private javax.swing.JRadioButton rdoDoAnNhanh;
    private javax.swing.JRadioButton rdoDoUong;
    private javax.swing.JTable tblDoAn;
    private javax.swing.JTable tblDoAnChiTiet;
    private javax.swing.JTextField txtTraCuuDoAn;
    // End of variables declaration//GEN-END:variables
}
